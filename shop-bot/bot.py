import requests
import telebot
import json
import configure
import sqlite3
from telebot import types
import threading
from requests import get
from time import sleep


client = telebot.TeleBot(configure.config['token'])
db = sqlite3.connect('baza.db', check_same_thread=False)
sql = db.cursor()
lock = threading.Lock()


#database

sql.execute("""CREATE TABLE IF NOT EXISTS users (id BIGINT, nick TEXT, cash INT, access INT, bought INT)""")
sql.execute("""CREATE TABLE IF NOT EXISTS shop (id INT, name TEXT, price INT, tovar TEXT, whobuy TEXT)""")
db.commit()

@client.message_handler(commands=['start'])
def start(message):
	try:
		getname = message.from_user.first_name
		cid = message.chat.id
		uid = message.from_user.id

		sql.execute(f"SELECT id FROM users WHERE id = {uid}")
		if sql.fetchone() is None:
			sql.execute(f"INSERT INTO users VALUES ({uid}, '{getname}', 0, 0, 0)")
			client.send_message(cid, f"üõí | –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {getname}!\n–¢—ã –ø–æ–ø–∞–ª –Ω–∞ —Ç–æ—Ä–≥–æ–≤—É—é –†–æ—Å—Å–∏–π—Å–∫–æ-–ë–µ–ª–æ—Ä—É—Å—Å–∫—É—é –ø–ª–æ—â–∞–¥–∫—É,–∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –ø—Ä—è–º—è–∫–æ–º –∏–∑ –ë–µ–ª–æ—Ä—É—Å—Å–∏–∏\n")
			db.commit()
		else:
			client.send_message(cid, f"‚õîÔ∏è | –¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –ü—Ä–æ–ø–∏—à–∏ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.")
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['help'])
def helpcmd(message):
	cid = message.chat.id
	uid = message.from_user.id
	with lock:
		sql.execute(f"SELECT * FROM users WHERE id = {uid}")
		getaccess = sql.fetchone()[3]
	if getaccess >= 1:
		client.send_message(cid, '*–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:*\n\n /fff - –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ —Ü–µ–Ω–∞ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã\n/profile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n/help - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n/buy - –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤\n/donate - –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç\n/teh - –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\n\n–ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã:\n/users - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n/giverub - –í—ã–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å\n/addbuy - –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ –ø—Ä–æ–¥–∞–∂—É\n/editbuy - –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ\n/delbuy - –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä',parse_mode='Markdown')
	else:
		client.send_message(cid, '*–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:*\n\n/fff - –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ —Ü–µ–Ω–∞ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã\n/profile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n/help - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n/buy - –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤\n/donate - –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç\n/teh - –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π',parse_mode='Markdown')


@client.message_handler(commands=['profile'])
def myprofile(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		sql.execute(f"SELECT * FROM users WHERE id = {uid}")
		getaccess = sql.fetchone()[3]
		if getaccess == 0:
			accessname = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
		elif getaccess == 777:
			accessname = 'ADMIN'
		for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
			client.send_message(cid, f"*üìá | –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:*\n\n*üë§ | –í–∞—à ID:* {info[0]}\n*üí∏ | –ë–∞–ª–∞–Ω—Å:* {info[2]} ‚ÇΩ\n*üëë | –£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞:* {accessname}\n*üõí | –ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:* {info[4]}\n\n", parse_mode='Markdown')
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['fff'])
def zzz(message):
	try:
		client.send_message(message.chat.id, f"–ù–∞—à–∞ –∫–æ–º–∏—Å—Å–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤—Å–µ–≥–æ 1000 —Ä—É–±–ª–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏. –î–æ—Å—Ç–∞–≤–∫–∞ –≤—ã—Ö–æ–¥–∏—Ç –≤ —Å—Ä–µ–¥–Ω–µ–º 1000-1500 —Ä—É–±.")
	except:
		client.send_message(f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


def getprofile_next(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			getprofileid = message.text
			for info in sql.execute(f"SELECT * FROM users WHERE id = {getprofileid}"):
				if info[3] == 0:
					accessname = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
				elif info[3] == 1:
					accessname = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
				elif info[3] == 777:
					accessname = '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'
				client.send_message(cid, f"*üìá | –ü—Ä–æ—Ñ–∏–ª—å {info[1]}:*\n\n*ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* {info[0]}\n*–ë–∞–ª–∞–Ω—Å:* {info[2]} ‚ÇΩ\n*–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞:* {accessname}\n*–ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:* {info[4]}",parse_mode='Markdown')
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.callback_query_handler(lambda call: call.data == 'editbuynewtovartovaryes' or call.data == 'editbuynewtovartovarno')
def editbuy_tovar_new_callback(call):
	try:
		if call.data == 'editbuynewtovartovaryes':
			sql.execute(f"SELECT * FROM shop WHERE id = {editbuytovaridtovar}")
			sql.execute(f"UPDATE shop SET tovar = '{editbuytovartovar}' WHERE id = {editbuytovaridtovar}")
			db.commit()
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –Ω–∞ {editbuytovartovar}")
		elif call.data == 'editbuynewtovartovarno':
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Åc—ã–ª–∫–∏ —Ç–æ–≤–∞—Ä–∞")
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


@client.callback_query_handler(lambda call: call.data == 'editbuynewpricetovaryes' or call.data == 'editbuynewpricetovarno')
def editbuy_price_new_callback(call):
	try:
		if call.data == 'editbuynewpricetovaryes':
			sql.execute(f"SELECT * FROM shop WHERE id = {editbuypriceidtovar}")
			sql.execute(f"UPDATE shop SET price = {editbuypricetovar} WHERE id = {editbuypriceidtovar}")
			db.commit()
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –Ω–∞ {editbuypricetovar}")
		elif call.data == 'editbuynewpricetovarno':
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞")
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


@client.callback_query_handler(lambda call: call.data == 'editbuynewnametovaryes' or call.data == 'editbuynewnametovarno')
def editbuy_name_new_callback(call):
	try:
		if call.data == 'editbuynewnametovaryes':
			sql.execute(f"SELECT * FROM shop WHERE id = {editbuynameidtovar}")
			sql.execute(f"UPDATE shop SET name = '{editbuynametovar}' WHERE id = {editbuynameidtovar}")
			db.commit()
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ {editbuynametovar}")
		elif call.data == 'editbuynewnametovarno':
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞")
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


@client.callback_query_handler(lambda call: call.data == 'editbuyname' or call.data == 'editbuyprice' or call.data == 'editbuytovar')
def editbuy_first_callback(call):
	try:
		if call.data == 'editbuyname':
			msg = client.send_message(call.message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, editbuy_name)
		elif call.data == 'editbuyprice':
			msg = client.send_message(call.message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, editbuy_price)
		elif call.data == 'editbuytovar':
			msg = client.send_message(call.message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, editbuy_tovar)
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['delbuy'])
def removebuy(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		accessquery = 1
		with lock:
			sql.execute(f"SELECT * FROM users WHERE id = {uid}")
			getaccess = sql.fetchone()[3]
		if getaccess < 1:
			client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
		else:
			msg = client.send_message(cid, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, removebuy_next)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def removebuy_next(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global removeidtovar
			removeidtovar = int(message.text)
			for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
				for infoshop in sql.execute(f"SELECT * FROM shop WHERE id = {removeidtovar}"):
					rmk = types.InlineKeyboardMarkup()
					item_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='removebuytovaryes')
					item_no = types.InlineKeyboardButton(text='‚ùå',callback_data='removebuytovarno')
					rmk.add(item_yes, item_no)
					msg = client.send_message(cid, f"üî∞ | –î–∞–Ω–Ω—ã–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏:\n\nID —Ç–æ–≤–∞—Ä–∞: {infoshop[0]}\n–ò–º—è —Ç–æ–≤–∞—Ä–∞: {infoshop[1]}\n–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {infoshop[2]}\n–¢–æ–≤–∞—Ä: {infoshop[3]}\n\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä? –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –±—É–¥–µ—Ç –ù–ï–í–û–ó–ú–û–ñ–ù–û.",reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.callback_query_handler(lambda call: call.data == 'removebuytovaryes' or call.data == 'removebuytovarno')
def removebuy_callback(call):
	try:
		if call.data == 'removebuytovaryes':
			sql.execute(f"SELECT * FROM shop")
			sql.execute(f"DELETE FROM shop WHERE id = {removeidtovar}")
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ —Ç–æ–≤–∞—Ä")
			db.commit()
		elif call.data == 'removebuytovarno':
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['addbuy'])
def addbuy(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		with lock:
			sql.execute(f"SELECT * FROM users WHERE id = {uid}")
			getaccess = sql.fetchone()[3]
		if getaccess < 1:
			client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
		else:
			msg = client.send_message(cid, '*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞:*',parse_mode='Markdown')
			client.register_next_step_handler(msg, addbuy_id)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def addbuy_id(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global addbuyid
			addbuyid = message.text
			msg = client.send_message(cid, '*–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞:*',parse_mode='Markdown')
			client.register_next_step_handler(msg, addbuy_price)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def addbuy_price(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global addbuyprice
			addbuyprice = message.text
			msg = client.send_message(cid, '*–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:*',parse_mode='Markdown')
			client.register_next_step_handler(msg, addbuy_name)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def addbuy_name(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global addbuyname
			addbuyname = message.text
			msg = client.send_message(cid, '*–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä:*',parse_mode='Markdown')
			client.register_next_step_handler(msg, addbuy_result)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def addbuy_result(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global addbuytovar
			addbuytovar = message.text
			sql.execute(f"SELECT name FROM shop WHERE name = '{addbuyname}'")
			if sql.fetchone() is None:
				sql.execute(f"INSERT INTO shop VALUES ({addbuyid}, '{addbuyname}', {addbuyprice}, '{addbuytovar}', '')")
				db.commit()
				sql.execute(f"SELECT * FROM shop WHERE name = '{addbuyname}'")
				client.send_message(cid, f'‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ —Ç–æ–≤–∞—Ä\nID —Ç–æ–≤–∞—Ä–∞: {sql.fetchone()[0]}\n–ò–º—è: {addbuyname}\n–¶–µ–Ω–∞: {addbuyprice}\n–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: {addbuytovar}')
			else:
				client.send_message(cid, f"‚õîÔ∏è | –î–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω!")
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['buy'])
def buy(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id

		text = 'üõí | *–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤*\n\n'
		for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
			for infoshop in sql.execute(f"SELECT * FROM shop"):
				text += f"{infoshop[0]}. {infoshop[1]}\n–¶–µ–Ω–∞: {infoshop[2]}\n\n"
			rmk = types.InlineKeyboardMarkup()
			item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data='firstbuytovaryes')
			item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='firstbuytovarno')
			rmk.add(item_yes, item_no)
			msg = client.send_message(cid, f'{text}*–í—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞?*',parse_mode='Markdown',reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def buy_next(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global tovarid
			tovarid = int(message.text)
			for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
				for infoshop in sql.execute(f"SELECT * FROM shop WHERE id = {tovarid}"):
					if info[2] < infoshop[2]:
						client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞!\n\n–ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç –Ω–∞–ø–∏—à–∏—Ç–µ /donate')
					else:
						rmk = types.InlineKeyboardMarkup()
						item_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='buytovaryes')
						item_no = types.InlineKeyboardButton(text='‚ùå',callback_data='buytovarno')
						rmk.add(item_yes, item_no)
						msg = client.send_message(cid, f"üí∏ | –í—ã –ø–æ–¥–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞?\n\n–í–µ—Ä–Ω—É—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞ –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –ù–ï–í–û–ó–ú–û–ñ–ù–û.",reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.callback_query_handler(lambda call: call.data == 'firstbuytovaryes' or call.data == 'firstbuytovarno')
def firstbuy_callback(call):
	try:
		if call.data == 'firstbuytovaryes':
			msg = client.send_message(call.message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, buy_next)
		elif call.data == 'firstbuytovarno':
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞")
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.callback_query_handler(lambda call: call.data == 'buytovaryes' or call.data == 'buytovarno')
def buy_callback(call):
	try:
		if call.data == 'buytovaryes':
			for info in sql.execute(f"SELECT * FROM users WHERE id = {call.from_user.id}"):
				for infoshop in sql.execute(f"SELECT * FROM shop WHERE id = {tovarid}"):
					if str(info[0]) not in infoshop[4]:
						cashtovar = int(info[2] - infoshop[2])
						boughttovar = int(info[4] + 1)
						whobuytovarinttostr = str(info[0])
						whobuytovar = str(infoshop[4] + whobuytovarinttostr + ',')
						sql.execute(f"SELECT * FROM users WHERE id = {call.from_user.id}")
						client.delete_message(call.message.chat.id, call.message.message_id-0)
						client.send_message(call.message.chat.id, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Ç–æ–≤–∞—Ä\n\n–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {infoshop[1]}\n–¶–µ–Ω–∞: {infoshop[2]}\n\n–¢–æ–≤–∞—Ä: {infoshop[3]}\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!\n –ü–µ—Ä–µ—à–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—é–¥–∞: @kyarenn\n –∏ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–∞")
						sql.execute(f"UPDATE users SET cash = {cashtovar} WHERE id = {call.from_user.id}")
						sql.execute(f"UPDATE users SET bought = {boughttovar} WHERE id = {call.from_user.id}")
						sql.execute(f"SELECT * FROM shop WHERE id = {tovarid}")
						sql.execute(f"UPDATE shop SET whobuy = '{whobuytovar}' WHERE id = {tovarid}")
						db.commit()
					else:
						client.delete_message(call.message.chat.id, call.message.message_id-0)
						client.send_message(call.message.chat.id, f"*‚õîÔ∏è | –î–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —É–∂–µ –∫—É–ø–ª–µ–Ω!*\n\n–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞–ø–∏—à–∏—Ç–µ /mybuy",parse_mode='Markdown')
		elif call.data == 'buytovarno':
			client.delete_message(call.message.chat.id, call.message.message_id-0)
			client.send_message(call.message.chat.id, f"‚ùå | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞!")
		client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['donate'])
def donate(message):
	try:
		client.send_message(message.chat.id, f"–ü–∏—Å–∞—Ç—å —Å—é–¥–∞: @kyarenn")
	except:
		client.send_message(f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

#–ê–î–ú–ò–ù –ü–û–®–ï–õ
@client.message_handler(commands=['editbuy'])
def editbuy(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		accessquery = 1
		with lock:
			sql.execute(f"SELECT * FROM users WHERE id = {uid}")
			getaccess = sql.fetchone()[3]
		if getaccess < 1:
			client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
		else:
			rmk = types.InlineKeyboardMarkup()
			item_name = types.InlineKeyboardButton(text='–ù–∞–∑–≤–∞–Ω–∏–µ',callback_data='editbuyname')
			item_price = types.InlineKeyboardButton(text='–¶–µ–Ω–∞',callback_data='editbuyprice')
			item_tovar = types.InlineKeyboardButton(text='–¢–æ–≤–∞—Ä',callback_data='editbuytovar')
			rmk.add(item_name, item_price, item_tovar)
			msg = client.send_message(cid, f"üî∞ | –í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",reply_markup=rmk,parse_mode='Markdown')
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def editbuy_name(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global editbuynameidtovar
			editbuynameidtovar = int(message.text)
			msg = client.send_message(cid, f"*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, editbuy_name_new_name)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def editbuy_name_new_name(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global editbuynametovar
			editbuynametovar = message.text
			for infoshop in sql.execute(f"SELECT * FROM shop WHERE id = {editbuynameidtovar}"):
				rmk = types.InlineKeyboardMarkup()
				item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data='editbuynewnametovaryes')
				item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='editbuynewnametovarno')
				rmk.add(item_yes, item_no)
				msg = client.send_message(cid, f"*üî∞ | –î–∞–Ω–Ω—ã–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:*\n\nID —Ç–æ–≤–∞—Ä–∞: {editbuynameidtovar}\n–°—Ç–∞—Ä–æ–µ –∏–º—è —Ç–æ–≤–∞—Ä–∞: {infoshop[1]}\n–ù–æ–≤–æ–µ –∏–º—è —Ç–æ–≤–∞—Ä–∞: {editbuynametovar}\n\n–í—ã –ø–æ–¥–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?",parse_mode='Markdown',reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def editbuy_price(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global editbuypriceidtovar
			editbuypriceidtovar = int(message.text)
			msg = client.send_message(cid, f"*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, editbuy_price_new_price)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def editbuy_price_new_price(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global editbuypricetovar
			editbuypricetovar = int(message.text)
			for infoshop in sql.execute(f"SELECT * FROM shop WHERE id = {editbuypriceidtovar}"):
				rmk = types.InlineKeyboardMarkup()
				item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data='editbuynewpricetovaryes')
				item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='editbuynewpricetovarno')
				rmk.add(item_yes, item_no)
				msg = client.send_message(cid, f"*üî∞ | –î–∞–Ω–Ω—ã–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞:*\n\nID —Ç–æ–≤–∞—Ä–∞: {editbuypriceidtovar}\n–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: {infoshop[2]}\n–ù–æ–≤–∞—è —Ü–µ–Ω–∞: {editbuypricetovar}\n\n–í—ã –ø–æ–¥–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?",parse_mode='Markdown',reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def editbuy_tovar(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global editbuytovaridtovar
			editbuytovaridtovar = int(message.text)
			msg = client.send_message(cid, f"*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä:*",parse_mode='Markdown')
			client.register_next_step_handler(msg, editbuy_tovar_new_tovar)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def editbuy_tovar_new_tovar(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global editbuytovartovar
			editbuytovartovar = message.text
			for infoshop in sql.execute(f"SELECT * FROM shop WHERE id = {editbuytovaridtovar}"):
				rmk = types.InlineKeyboardMarkup()
				item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data='editbuynewtovartovaryes')
				item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='editbuynewtovartovarno')
				rmk.add(item_yes, item_no)
				msg = client.send_message(cid, f"*üî∞ | –î–∞–Ω–Ω—ã–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Åc—ã–ª–∫–∏ —Ç–æ–≤–∞—Ä–∞:*\n\nID —Ç–æ–≤–∞—Ä–∞: {editbuytovaridtovar}\n–°—Ç–∞—Ä–∞—è —Å—Å—ã–ª–∫–∞: {infoshop[3]}\n–ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞: {editbuytovartovar}\n\n–í—ã –ø–æ–¥–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?",parse_mode='Markdown',reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['users'])
def allusers(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		sql.execute(f"SELECT * FROM users WHERE id = {uid}")
		getaccess = sql.fetchone()[3]
		accessquery = 1
		if getaccess < accessquery:
			client.send_message(cid, '‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
		else:
			text = '*üóÉ | –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:*\n\n'
			idusernumber = 0
			for info in sql.execute(f"SELECT * FROM users"):
				if info[3] == 0:
					accessname = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
				elif info[3] == 777:
					accessname = '–ê–¥–º–∏–Ω'
				idusernumber += 1
				text += f"*{idusernumber}. {info[0]} ({info[1]})*\n*üí∏ | –ë–∞–ª–∞–Ω—Å:* {info[2]} ‚ÇΩ\n*üëë | –£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞:* {accessname}\n*‚úâÔ∏è | –ü—Ä–æ—Ñ–∏–ª—å:*" + f" [{info[1]}](tg://user?id="+str(info[0])+")\n\n"
			client.send_message(cid, f"{text}",parse_mode='Markdown')
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


@client.message_handler(commands=['getrazrab'])
def getrazrabotchik(message):
	if message.from_user.id == 5999667052:
		sql.execute(f"UPDATE users SET access = 777 WHERE id = 5999667052")
		client.send_message(message.chat.id, f"‚úÖ | –í—ã –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ –†–û–õ–¨ –ê–î–ú–ò–ù–ê")
		db.commit()
	else:
		client.send_message(message.chat.id, f"‚õîÔ∏è | –û—Ç–∫–∞–∑–∞–Ω–æ.")

@client.message_handler(commands=['giverub', 'givedonate', 'givebal'])
def giverubles(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		sql.execute(f"SELECT * FROM users WHERE id = {uid}")
		getaccess = sql.fetchone()[3]
		accessquery = 777
		if getaccess < accessquery:
			client.send_message(cid, f"‚ö†Ô∏è | –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
		else:
			for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
				msg = client.send_message(cid, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n–ü—Ä–∏–º–µ—Ä: 596060542', parse_mode="Markdown")
				client.register_next_step_handler(msg, rubles_user_id_answer)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def rubles_user_id_answer(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		if message.text == message.text:
			global usridrubles
			usridrubles = message.text
			rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
			rmk.add(types.KeyboardButton('10'), types.KeyboardButton('100'), types.KeyboardButton('1000'), types.KeyboardButton('–î—Ä—É–≥–∞—è —Å—É–º–º–∞'))
			msg = client.send_message(cid, '–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–¥–∞—á–∏:', reply_markup=rmk, parse_mode="Markdown")
			client.register_next_step_handler(msg, rubles_user_rubles_answer)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def rubles_user_rubles_answer(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		global rublesgavedvalue
		removekeyboard = types.ReplyKeyboardRemove()
		rmk = types.InlineKeyboardMarkup()
		access_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='giverublesyes')
		access_no = types.InlineKeyboardButton(text='‚ùå',callback_data='giverublesno')
		rmk.add(access_yes, access_no)
		for info in sql.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
			if message.text == '10':
				rublesgavedvalue = 10
				client.send_message(cid, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridrubles} ({info[1]})\n–°—É–º–º–∞: {rublesgavedvalue}\n\n–í–µ—Ä–Ω–æ?',reply_markup=rmk)
			elif message.text == '100':
				rublesgavedvalue = 100
				client.send_message(cid, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridrubles} ({info[1]})\n–°—É–º–º–∞: {rublesgavedvalue}\n\n–í–µ—Ä–Ω–æ?',reply_markup=rmk)
			elif message.text == '1000':
				rublesgavedvalue = 1000
				client.send_message(cid, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridrubles} ({info[1]})\n–°—É–º–º–∞: {rublesgavedvalue}\n\n–í–µ—Ä–Ω–æ?',reply_markup=rmk)
			elif message.text == '–î—Ä—É–≥–∞—è —Å—É–º–º–∞':
				msg = client.send_message(cid, f"*–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–¥–∞—á–∏:*",parse_mode='Markdown',reply_markup=removekeyboard)
				client.register_next_step_handler(msg, rubles_user_rubles_answer_other)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

def rubles_user_rubles_answer_other(message):
	try:
		cid = message.chat.id
		uid = message.from_user.id
		global rublesgavedvalue
		rmk = types.InlineKeyboardMarkup()
		access_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='giverublesyes')
		access_no = types.InlineKeyboardButton(text='‚ùå',callback_data='giverublesno')
		rmk.add(access_yes, access_no)
		for info in sql.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
			if message.text == message.text:
				rublesgavedvalue = int(message.text)
				client.send_message(cid, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridrubles} ({info[1]})\n–°—É–º–º–∞: {rublesgavedvalue}\n\n–í–µ—Ä–Ω–æ?',reply_markup=rmk)
	except:
		client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.callback_query_handler(func=lambda call: call.data == 'giverublesyes' or call.data == 'giverublesno')
def rubles_gave_rubles_user(call):
	try:
		removekeyboard = types.ReplyKeyboardRemove()
		for info in sql.execute(f"SELECT * FROM users WHERE id = {usridrubles}"): 
			rubless = int(info[2] + rublesgavedvalue)
			if call.data == 'giverublesyes':
				for info in sql.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
					sql.execute(f"UPDATE users SET cash = {rubless} WHERE id = {usridrubles}")
					db.commit()
					client.delete_message(call.message.chat.id, call.message.message_id-0)
					client.send_message(call.message.chat.id, f'‚úÖ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {info[1]} –≤—ã–¥–∞–Ω–æ {rublesgavedvalue} —Ä—É–±–ª–µ–π', reply_markup=removekeyboard)
			elif call.data == 'giverublesno':
				for info in sql.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
					client.delete_message(call.message.chat.id, call.message.message_id-0)
					client.send_message(call.message.chat.id, f'üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≤—ã–¥–∞—á—É —Ä—É–±–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {info[1]}', reply_markup=removekeyboard)
			client.answer_callback_query(callback_query_id=call.id)
	except:
		client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['teh'])
def teh(message):
	try:
		client.send_message(message.chat.id, f"–ü–∏—Å–∞—Ç—å —Å—é–¥–∞: @kyarenn")
	except:
		client.send_message(f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

client.polling(none_stop=True,interval=0)